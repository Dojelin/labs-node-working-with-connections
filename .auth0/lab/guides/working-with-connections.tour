{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "1: Working with Connections",
  "steps": [
    {
      "title": "Set Up Tenant and Local Configurations for this Lab",
      "description": "## Set Up Tenant and Local Configurations for this Lab\n\n\n1. #### Click [here](command:auth0.lab.tenantConfigure) to ensure that your Auth0 tenant is configured appropriately for this lab\n    Wait until you see the message that `resources.xml` has been successfully deploy before continuing to the next step.\n    ![resources deployed message](https://cdn.auth0.com/website/a0fun/v2/resources.png) \n1. #### Click [here](command:auth0.lab.localConfigure) to ensure that your application configurations are set locally (creates `.env` file under `src/web-app`).\n"
    },
    {
      "file": "",
      "line": 1,
      "title": "What you'll do",
      "description": "## Here's what you'll do:  \n\n*   Enable Twitter as a social connection for your Web App\n*   Create a new Auth0 Database\n*   Add new users to the database using bulk migration\n\nA connection is a relationship between Auth0 and a source of users, which may include identity providers (such as Google or LinkedIn), databases, or passwordless authentication methods. Auth0 sits between your application and its sources of users, which adds a level of abstraction so your application is isolated from any changes to and idiosyncrasies of each source's implementation."
    },
    {
      "file": "",
      "line": 1,
      "title": "Enable GitHub as a social connection for your web app",
      "description": "## Enable GitHub as a social connection for your web app\n\nIn this lab, you will walk through how to enable a Social connection as if you had an actual social media developer account.  \n  \nIf you were working in a production environment, before connecting your Auth0 app to a third-party service (in this example, GitHub,) [you would need to have a Developer account](https://auth0.com/docs/connections/social/github) with the third party.  \n  \nHowever, for the lab, you will only enable the GitHub social connection and test the login screen to see the result. You will _not_ configure the GitHub Client ID and Client Secret as part of this lab, [as you would for a production environment](https://auth0.com/docs/get-started/dashboard/set-up-social-connections).  \n  \n1. #### Open your Auth0 Dashboard and make sure you're working in your default _dev-_ tenant.  \n    \n1. #### Remind yourself what the current login experience looks like by clicking the profile image in the upper right hand corner and selecting _Getting Started_ > \"Try your login box\" > _Try it out_. \n    - The _Getting Started_ link may instead be at the top of your left-hand navigation menu - this is dependent on whether you have previously selected an option to hide it.\n    - If you do not see the login page, you probably have an authentication cookie set from previous exercises. You can force a logout by visiting [_https://{tourTenantName}.{yourRegion}.auth0.com/api/v2/logout_](https://your-tenant.region.auth0.com/v2/logout).     \n    - _Tip:_ Your tenant url including the tenant name and region is helpfully located at the bottom of the Visual Studio Code window! (Auth0: yourTenantName.yourRegion.auth0.com) \n\n    ![switch to getting started](https://cdn.auth0.com/website/a0fun/v2/connections-1.gif)    \n\n1. #### Return to the dashboard and click _Authentication_ in the left-hand navigation. The navigation expands to show the four types of connections:\n    \n    1. Database\n    1. Social\n    1. Enterprise\n    1. Passwordless      \n    1. Authentication Profile\n     \n1. #### Click _Social_.\n    * Here, you can see the social connections for your tenant. Note that the Google connection is enabled by default. \n    * You should avoid using the \"Continue with Google\" button while completing the labs. The seamless SSO (Single Sign On) experience may skip over the Login page at times when you want to see it.\n\n1. #### Click _Create Connection_, then type GitHub in the search field, and select it.\n    The _New GitHub Social Connection_ page is displayed. This details the items GitHub will need access to in your tenant.  \n    \n1. #### Click _Continue._  \n    \n    - On the GitHub Social Connection page, you will see the fields for:  \n        1.  Consumer API key\n        1.  Consumer API secret key    \n    - These fields state “Leave blank to use Auth0 dev keys” - this will allow you to test out the social connection without obtaining your own Key and Secret. If you were working on a production application, you would need to obtain your own keys.  \n        \n1. #### Keep the default settings, and click _Create_. \n    The GitHub connection _Applications_ tab is displayed.    \n    Now, we'll choose which applications will use the GitHub social connection: for this exercise, we'll select the _Lab: Web App_.  \n\n1. #### Click the toggle switch to the right of the application in the list.  \n\n    \n1. #### Next, click the breadcrumb link to go back to the _Social_ connections list.\n    - Note the warning icon next to GitHub In the list of social connections. Hover over the warning icon, and you’ll see a popover message “Active with Auth0 Dev Keys\".\n1. #### Click the GitHub entity, and the settings page is displayed, with a _warning_ message:\n    - This connection is using Auth0 development keys. Auth0 development keys are intended for testing and are not recommended for Production environments. This connection should be configured with your own keys to enable SSO, federated logout, and other features.  \n    [__Auth0 development keys are not recommended for Production environments__](https://auth0.com/docs/connections/social/devkeys)__.__  \n      \n1. #### Let's launch the Sample Application (Lab: Web App) and see the GitHub log in option enabled on the login box.\n    1. #### Click [here](command:workbench.action.debug.start) to launch the application locally.\n         - Wait a moment for the application to launch. You can see the progress in the debug console.\n    1. #### Click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open it in your browser.\n    1. #### In the sample app, click the login link in the top right.\n        The application redirects to Auth0 for login.\n    1. #### Scroll down - you should see the _Continue with GitHub_ button. \n    Congratulations! The _Sign in with GitHub_ option should now show up on the application's login box:\n\n    ![sign in with GitHub](https://cdn.auth0.com/website/a0fun/v2/connections-5.gif)",
      "selection": {
        "start": {
          "line": 16,
          "character": 12
        },
        "end": {
          "line": 16,
          "character": 14
        }
      }
    },
    {
      "file": "",
      "line": 1,
      "title": "Test the default Auth0 database connection",
      "description": "## Test the default Auth0 database connection\n\nAuth0 provides database connections to authenticate users with an email/username and password. These credentials are securely stored in the Auth0 user store or in your own database. A default database connection is set up for you when your tenant was created.\n\nIn this exercise, you will explore the settings for the default database connection, and see what happens if an application has no connection enabled for it.\n\n1. #### In your tenant, select _Authentication > Database_. \n    The available database connections are displayed. Currently, the default created for you is called _Username-Password-Authentication_. This database stores accounts that are created by users or migrated in. Social connections will NOT appear here.\n\n    ![navigate to database connections](https://cdn.auth0.com/website/a0fun/v2/connections-6.gif)    \n      \n1. #### Explore the current database connection settings by selecting the title link.     \n    The database connection _settings_ tab is displayed.  \n    ![view the settings of the current database connection](https://cdn.auth0.com/website/a0fun/v2/connections-7.gif)   \n     On the Settings tab, you can enable usernames, disable signups, and enable import of users to Auth0 if you define a Custom Database for the connection.  \n      \n1. #### Select the _Authentication Methods_ tab and select _Configure_ in the _Password_ section. \n    ![check the password policy](https://cdn.auth0.com/website/a0fun/v2/connections-8.gif)   \n    Here you can customize your specific password policy, including password strength, history, a dictionary of forbidden passwords, and forbidding the use of personal data in passwords.  \n\n1. #### Select the back button in your browser to return to your database connection page.\n      \n1. #### Select the _Custom Database_ tab. \n    ![Navigate to the custom database tab](https://cdn.auth0.com/website/a0fun/v2/connections-9.gif)  \n    If you have an enterprise account you can enable a Custom Database connection to link to your own MySql, Mongo, SQL Server, etc. database. Here you would also set up your Database Actions scripts for user lifecycle operations:\n    \n    - Login\n    - Create\n    - Verify\n    - Change password\n    - Get user\n    - Delete  \n          \n    However, as you are signed up for a free Auth0 account, this feature will be disabled unless you upgrade to an Enterprise plan.   \n1. #### Select the _Applications_ tab, then toggle switch next to the _Lab: Web App_ to off.  \n    ![disable the database connection for the lab web app](https://cdn.auth0.com/website/a0fun/v2/connections-10.gif)  \n    You've now disabled this database connection for the Web Application.  \n1. #### The app should still be running from the last time we launched it. Click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open it in your browser.\n    - If it isn't still running, click [here](command:workbench.action.debug.start) to start it up again.\n1. #### Select the log in link in the top right corner.\n    ![log into the lab web app](https://cdn.auth0.com/website/a0fun/v2/connections-11.gif)  \n    Note that your login screen now only has sign-in with social connections, as you have disabled the database connection for this application. As this change was made in the tenant, and didn't require changes to application code, there was no need to rebuild the application.  \n1. #### Back in your tenant, locate the _Lab: Web App_ on the Username-Password-Authentication connection and re-enable it by clicking the toggle.   \n    ![re-enable the database connection for lab web app](https://cdn.auth0.com/website/a0fun/v2/connections-12.gif)   \n1. #### Click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open your web app up again and click the login link. (You can also just refresh the page if you already have it open.)\n    Username and password authentication is restored!  "
    },
    {
      "file": "",
      "line": 1,
      "title": "Create a new Auth0 database connection",
      "description": "## Create a new Auth0 database connection\n\nWe're going to import some user accounts into Auth0 - but before we do, let's create a new database connection for them. \n\n1. #### Navigate to _Authentication > Database_, then click _Create DB Connection_.\n    ![Navigate to the create DB button](https://cdn.auth0.com/website/a0fun/v2/connections-13.gif)   \n    The New Database Connection screen is displayed.  \n      \n1. #### Enter _Contoso-Users_ as the name for this database connection, then click _Create_\n    ![Name the new database connection](https://cdn.auth0.com/website/a0fun/v2/connections-14.gif)   \n    The Settings tab for the new database connection is displayed.   \n    \n1. #### Move to the _Applications tab_ and enable this new connection for the  _Lab: Web App_ application.\n    ![enable the new connection for the lab web app](https://cdn.auth0.com/website/a0fun/v2/connections-15.gif)    \n      \n1. #### Now, go to _Applications > Lab: Web App > Connections_. \n    Note this application is using two database connections:\n    - _Username-Password-Authentication_ \n    - _Contoso-Users_\n    \n1. #### _Disable_ the _Username-Password-Authentication_ connection.   \n    This will ensure that only the users we're adding into the new database connection are able to log in.\n    ![disable the default databse connection](https://cdn.auth0.com/website/a0fun/v2/connections-16.gif)   \n      \n1. #### Now, let's go sign up for an account in the web app:\n    1. #### The app should still be running from the last time we launched it. Click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open it in your browser.\n        -  If it isn't still running, click [here](command:workbench.action.debug.start) to start it up again.\n    1. #### Now, click the _login_ link. \n        The login screen is displayed because you have at least one connection enabled (The new Contoso database). But, there is no indication to the user that anything has changed.  \n    1. #### Click the _Sign-up_ link and enter an email address that you have access to, along with a unique password for this new account. Then sign up!\n        - Use good password hygiene: Don’t use an existing password!\n        - _**DO NOT**_ use social login. Instead, log in using a username and password.   \n        - If you've completed other labs and used a Gmail alias, you will want to increment the alias (+auth0labs2 for example) in order to sign up as a new unique user -- as you will need to receive the verification email. You may also just use any email address you have not used before and have access to. \n\n    ![sign up on the web app with an email address you have access to](https://cdn.auth0.com/website/a0fun/v2/connections-17.gif)   \n    \n    \n1. #### Now, back in your Auth0 Dashboard, navigate to _User Management > Users_.  \n    Note that you have a user with your email address and it is stored in the _Contoso-Users_ database connection you created. Nice work!  \n\n    ![navigate to user management, users](https://cdn.auth0.com/website/a0fun/v2/connections-18.gif)  \n      \n1. #### Before finishing this exercise navigate to _Applications > Applications > Lab: Web App > Connections_ and re-_enable_ _Username-Password-Authentication_.\n\n\nWith the new database in place and enabled, we're ready to add some users."
    },
    {
      "file": "",
      "line": 1,
      "title": "Add new users to the database using bulk migration",
      "description": "## Add new users to the database using bulk migration\n\nAuth0 supports importing users from external applications using Custom Database connections, the Auth0 Management API, or the User Import/Export Extension.\n\nIn this exercise, you will perform a bulk user import using the Management API. Bulk imports are useful for migrating users from an existing database or service to Auth0. This extension is intended for simple use cases. For large bulk import jobs, writing a custom script that uses the Management API is recommended.  \n\n1. #### If you're not already logged in, log in to the Auth0 Dashboard and ensure that you're on your *dev-* tenant.  \n\n1. #### In the left-hand navigation, click _Applications > APIs_.  \n\n    The _APIs_ list view is displayed. Notice that an API already exists for your tenant, the _Auth0 Management API_.  \n\n    Yes, that is right we use Auth0 to secure our own APIs! The Management API is a system API with an identifier of _[https://{yourTenantName}.{yourRegion}.auth0.com/api/v2](https://{yourTenantName}.{yourRegion}.auth0.com/api/v2)_.  \n\n    ![profile-10](https://cdn.auth0.com/website/a0fun/v2/profile-10.gif)  \n\n1. #### Click the _Auth0 Management API_ link to display the _Settings_ for this API.  \n\n    Note the warning alerting you to the fact this is a special API.  \n\n1. #### Click the _Permissions_ tab located at the top of the page.  \n\n    These are all the fine grain permissions available for this API.  \n\n    ![profile-12](https://cdn.auth0.com/website/a0fun/v2/profile-12.gif)  \n\n1. #### Click the _API Explorer_ tab located at the top of the page.  \n \n    The API Explorer can be used to explore and prototype calls to the API without having to write a line of code. **If you've never used the API Explorer before, you will need to click _Create & Authorize Test Application_ on this page for the API Explorer to work.** \n    \n    ![profile-13](https://cdn.auth0.com/website/a0fun/v2/profile-13.gif)  \n\n1. #### Click the _Copy_ button to the right of the Access Token.  \n\n    ![profile-14](https://cdn.auth0.com/website/a0fun/v2/profile-14.gif)  \n\n\n1. #### Scroll down to the _Using this token in the API Explorer_ section. \n\n1. #### Click the _Management API Explorer_ link listed in step 1.\n    The _Management API Explorer_ will open in a new tab. Feel free to bookmark this tool, it is quite useful. It can always be found at [_https://auth0.com/docs/api/management/v2_](https://auth0.com/docs/api/management/v2).  \n\n    ![profile-16](https://cdn.auth0.com/website/a0fun/v2/profile-16.gif)  \n\n1. #### Click the _SET API TOKEN_ button located in the upper right corner of the page.  \n\n    The _Set Management API Token_ modal dialog is displayed.  \n\n1. #### Paste the Access Token into the _API Token_ field and click the _Set Token_ button.\n    The Explorer will update to show your tenant domain and the allowed scopes provided by the Access Token in the left-hand navigation.  \n\n1. #### Scroll the left-hand navigation down to the _Jobs_ section and select the _Jobs_ link.  \n\n1. #### Select _Create Import Users Job_.\n     Looking at the documentation for this endpoint, you can see it requires a _POST_ request to _/api/v2/jobs/users-imports_ with an access token containing the _create:users_ scope.  \n    \n1. #### Examine the Required Body Parameters. \n    Notice that you will need the *connection_id* of the connection you want to import the users into. You will also need to upload a [JSON-formatted file](https://auth0.com/docs/manage-users/user-migration/bulk-user-import-database-schema-and-examples) of the *users* you wish to import. These two parameters are required. The remaining parameters are optional.\n  \n1. #### Get the Connection ID for the *Contoso-Users* Database Connection.  \n    1. Click back to the tab with your Auth0 Management Dashboard and navigate to *Authentication* > *Database*.\n    1. Click on *Contoso-Users*\n    1. Locate the label *Database Identifier* near the top of this screen (starts with *con_*).\n    1. Copy the connection ID (**including** the prefix *con_*).\n    \n1. #### Return to the API Explorer tab and paste in the connection ID you copied in the *connection_id* field \n      \n1. #### Download the JSON file\n    1. Click the following link and it will open in a new tab: https://raw.githubusercontent.com/auth0/auth0-product-education-labs/main/data/bulk-import-users.json\n    1. Save the file by going to *File* > *Save Page As* in your browser. Choose a location where you can easily locate the file.\n      \n1. #### Upload the file to the API Explorer and Issue the Request.\n    1. Click the *users* field to open your system's file explorer.\n    1. Navigate to where you saved *bulk-import-users.json* locally.\n    1. Click *Open* to upload the file API Explorer.\n    1. Scroll down and click *Test Endpoint* to issue the request. \n    \n    Note that you should get a 202 HTTP response indicating that the job was accepted. Once the job completes, you will see that the users have been imported into the _Contoso-Users_ database connection. \n    ![return and view the users in the database](https://cdn.auth0.com/website/a0fun/v2/connections-24.gif)  \n    \n1. ### Check that the users were successfully imported. \n    1. Select *User Management* from the left navigation.\n    1. Select  *Users*\n    1. You should see the newly imported users with a value of *Contoso-Users* under the *Connection* column.\n    ![return and view the users in the database](https://cdn.auth0.com/website/a0fun/v2/connections-23.gif)  \n\n1. ### Reenable the User-Password-Authentication Database Connection.\n    1. Select *Applications* > *Applications* from the left navigation menu.\n    1. Select *Lab: Web App*.\n    1. Select the *Connections* tab.\n    1. Toggle on *User-Password-Authentication*.\n\n    ![Reenable default database](https://cdn.auth0.com/website/a0fun/v2/connections-19.gif)  \n",
      "selection": {
        "start": {
          "line": 87,
          "character": 50
        },
        "end": {
          "line": 87,
          "character": 107
        }
      }
    },
    {
      "file": "",
      "line": 1,
      "title": "Recap",
      "description": "## Recap\n\nIn this lab you:\n\n*   Enabled Twitter as a social connection for your Web App.\n*   Created a new Auth0 Database\n*   Added the User Import / Export Extension to your tenant\n*   Imported new users to the new database using bulk migration/user import."
    }
  ]
}