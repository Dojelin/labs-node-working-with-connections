{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "1: Working with Connections",
  "steps": [
    {
      "file": "README.md",
      "line": 1,
      "title": "What you'll do",
      "description": "## Here's what you'll do:  \n\n*   Enable Twitter as a social connection for your Web App\n*   Create a new Auth0 Database\n*   Add new users to the database using bulk migration\n\nA connection is a relationship between Auth0 and a source of users, which may include identity providers (such as Google or LinkedIn), databases, or passwordless authentication methods. Auth0 sits between your application and its sources of users, which adds a level of abstraction so your application is isolated from any changes to and idiosyncrasies of each source's implementation."
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Enable Twitter as a social connection for your web app",
      "description": "## Enable Twitter as a social connection for your web app\n\nIn this lab, you will walk through how to enable a Social connection as if you had an actual social media developer account.  \n  \nIf you were working in a production environment, before connecting your Auth0 app to a third-party service (in this example, Twitter,) [you would need to have a Developer account](https://auth0.com/docs/connections/social/twitter) with the third party.  \n  \nHowever, for the lab, you will only enable the Twitter social connection and test the login screen to see the result. You will _not_ configure the Twitter Client ID and Client Secret as part of this lab, [as you would for a production environment](https://auth0.com/docs/get-started/dashboard/set-up-social-connections).  \n  \n1. #### Open your Auth0 Dashboard and make sure you're working in your _labs-_ tenant.  \n    \n1. #### Remind yourself what the current login experience looks like by clicking the profile image in the upper right hand corner and selecting _Getting Started_ > \"Try your login box\" > _Try it out_. \n    - _Important_ If you don't see this option, first scroll to the bottom of the page and look in the lower right-hand side for \"_I'm done with this setup. Hide this._\" and click the _Hide this_ link.\n    - The login page is displayed with the default fields for user credentials.  \n    - If you do not see the login page, you probably have an authentication cookie set from previous exercises. You can force a logout by visiting [_https://YOUR-TENANT.REGION.auth0.com/v2/logout_](https://your-tenant.region.auth0.com/v2/logout).  \n    - _Tip:_ Bookmark your tenant’s logout URL so you can use it throughout the lab exercises.  \n\n    ![switch to getting started](https://cdn.auth0.com/website/a0fun/v2/connections-1.gif)    \n\n1. #### Return to the dashboard and click _Authentication_ in the left-hand navigation. The navigation expands to show the four types of connections:\n    \n    1. Database\n    1. Social\n    1. Enterprise\n    1. Passwordless      \n      \n1. #### Click _Social_, click _Create Connection_, then type Twitter in the search field, and select it.\n    The _New Twitter Social Connection_ page is displayed. This details the items Twitter will need access to in your labs tenant.  \n\n    ![Enable a social connection](https://cdn.auth0.com/website/a0fun/v2/connections-2.gif)  \n    \n1. #### Click _Continue._  \n    \n    - On the Twitter Social Connection page, you will see the fields for:  \n        1.  Consumer API key\n        1.  Consumer API secret key    \n    - These fields state “Leave blank to use Auth0 dev keys” - this will allow you to test out the social connection without obtaining your own Key and Secret. If you were working on a production application, you would need to obtain your own keys.  \n        \n1. #### Keep the default settings, and click _Create_. \n    The Twitter connection _Applications_ tab is displayed.  \n      \n    - Now, we'll choose which applications will use the Twitter social connection: for this exercise, we'll select the _Lab: Web App_.  \n\n1. #### Click the toggle switch to the right of the application in the list.  \n    ![Enable social for the lab web app](https://cdn.auth0.com/website/a0fun/v2/connections-3.gif)  \n    \n1. #### Next, click the breadcrumb link to go back to the _Social_ connections list.\n    - Note the warning icon next to Twitter In the list of social connections. Hover over the warning icon, and you’ll see a popover message “Active with Auth0 Dev Keys\".\n1. #### Click the Twitter entity, and the settings page is displayed, with a _warning_ message:\n    - This connection is using Auth0 development keys. Auth0 development keys are intended for testing and are not recommended for Production environments. This connection should be configured with your own keys to enable SSO, federated logout, and other features.  \n    [__Auth0 development keys are not recommended for Production environments__](https://auth0.com/docs/connections/social/devkeys)__.__  \n    ![Examine the settings](https://cdn.auth0.com/website/a0fun/v2/connections-4.gif)   \n1. #### Let's launch the Sample Application (Lab: Web App) and see the Twitter log in option enabled on the login box.\n    1. #### Click [here](command:workbench.action.debug.start) to launch the application locally.\n         - Wait a moment for the application to launch. You can see the progress in the debug console.\n    1. #### Click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open it in your browser.\n    1. #### In the sample app, click the login link in the top right.\n        The application redirects to Auth0 for login.\n    1. #### Scroll down - you should see the _Continue with Twitter_ button. \n    Congratulations! The _Sign in with Twitter_ option should now show up on the application's login box:  \n\n    ![sign in with twitter](https://cdn.auth0.com/website/a0fun/v2/connections-5.gif)  "
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Test the default Auth0 database connection",
      "description": "## Test the default Auth0 database connection\n\nAuth0 provides database connections to authenticate users with an email/username and password. These credentials are securely stored in the Auth0 user store or in your own database. A default database connection is set up for you when your tenant was created.\n\nIn this exercise, you will explore the settings for the default database connection, and see what happens if an application has no connection enabled for it.\n\n1. #### In your labs tenant, click _Authentication > Database_. \n    The available database connections are displayed. Currently, the default created for you is called _Username-Password-Authentication_. This database stores accounts that are created by users or migrated in. Social connections will NOT appear here.\n\n    ![navigate to database connections](https://cdn.auth0.com/website/a0fun/v2/connections-6.gif)    \n      \n1. #### Explore the current database connection settings by clicking the title link.     \n    The database connection _settings_ tab is displayed.  \n    ![view the settings of the current database connection](https://cdn.auth0.com/website/a0fun/v2/connections-7.gif)   \n     On the Settings tab, you can enable usernames, disable signups, and enable import of users to Auth0 if you define a Custom Database for the connection.  \n      \n1. #### Click the _Password Policy_ tab. \n    ![check the password policy](https://cdn.auth0.com/website/a0fun/v2/connections-8.gif)   \n    Here you can customize your specific password policy, including password strength, history, a dictionary of forbidden passwords, and forbidding the use of personal data in passwords.  \n      \n1. #### Click the _Custom Database_ tab. \n    ![Navigate to the custom database tab](https://cdn.auth0.com/website/a0fun/v2/connections-9.gif)  \n    If you have an enterprise account you can enable a Custom Database connection to link to your own MySql, Mongo, SQL Server, etc. database. Here you would also set up your Database Actions scripts for user lifecycle operations:\n    \n    - Login\n    - Create\n    - Verify\n    - Change password\n    - Get user\n    - Delete  \n          \n    However, as you are signed up for a free Auth0 account, this feature will be disabled unless you upgrade to an Enterprise plan.   \n1. #### Click the _Applications_ tab, then toggle switch next to the _Lab: Web App_ to off.  \n    ![disable the database connection for the lab web app](https://cdn.auth0.com/website/a0fun/v2/connections-10.gif)  \n    You've now disabled this database connection for the Web Application.  \n1. #### The app should still be running from the last time we launched it. Click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open it in your browser.\n    - If it isn't still running, click [here](command:workbench.action.debug.start) to start it up again.\n1. #### Click the log in link in the top right corner.\n    ![log into the lab web app](https://cdn.auth0.com/website/a0fun/v2/connections-11.gif)  \n    Note that your login screen now only has sign-in with social connections, as you have disabled the database connection for this application. As this change was made in the tenant, and didn't require changes to application code, there was no need to rebuild the application.  \n1. #### Back in your tenant, locate the _Lab: Web App_ on the Username-Password-Authentication connection and re-enable it by clicking the toggle.   \n    ![re-enable the database connection for lab web app](https://cdn.auth0.com/website/a0fun/v2/connections-12.gif)   \n1. #### Click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open your web app up again and click the login link. (You can also just refresh the page if you already have it open.)\n    Username and password authentication is restored!  "
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Create a new Auth0 database",
      "description": "## Create a new Auth0 database\n\nWe're going to import some user accounts into Auth0 - but before we do, let's create a new database for them. \n\n1. #### Navigate to _Authentication > Database_, then click _Create DB Connection_.\n    ![Navigate to the create DB button](https://cdn.auth0.com/website/a0fun/v2/connections-13.gif)   \n    The New Database Connection screen is displayed.  \n      \n1. #### Enter _Contoso-Users_ as the name for this database connection, then click _Create_\n    ![Name the new database connection](https://cdn.auth0.com/website/a0fun/v2/connections-14.gif)   \n    The Settings tab for the new database connection is displayed.   \n    \n1. #### Move to the _Applications tab_ and enable this new connection for the  _Lab: Web App_ application.\n    ![enable the new connection for the lab web app](https://cdn.auth0.com/website/a0fun/v2/connections-15.gif)    \n      \n1. #### Now, go to _Applications > Lab: Web App > Connections_. \n    Note this application is using two database connections:\n    - _Username-Password-Authentication_ \n    - _Contoso-Users_\n    \n1. #### _Disable_ the _Username-Password-Authentication_ connection.   \n    This will ensure that only the users we're adding into the new database connection are able to log in.\n    ![disable the default databse connection](https://cdn.auth0.com/website/a0fun/v2/connections-16.gif)   \n      \n1. #### Now, let's go sign up for an account in the web app:\n    1. #### The app should still be running from the last time we launched it. Click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open it in your browser.\n        -  If it isn't still running, click [here](command:workbench.action.debug.start) to start it up again.\n    1. #### Now, click the _login_ link. \n        The login screen is displayed because you have at least one connection enabled (The new Contoso database). But, there is no indication to the user that anything has changed.  \n    1. #### Click the _Sign-up_ link and enter an email address that you have access to, along with a unique password for this new account. Then sign up!\n        - Use good password hygiene: Don’t use an existing password!\n        - _**DO NOT**_ use social login. Instead, log in using a username and password.   \n        - If you've completed other labs and used a Gmail alias or other account, you can use those again provided you are able to log in, as you will need to receive the verification email.\n\n    ![sign up on the web app with an email address you have access to](https://cdn.auth0.com/website/a0fun/v2/connections-17.gif)   \n\n    1. #### When prompted, click the green checkmark to authorize the application.\n    \n1. #### Now, back in your Auth0 Dashboard, navigate to _User Management > Users_.  \n    Note that you have a user with your email address and it is stored in the _Contoso-Users_ database connection you created. Nice work!  \n\n    ![naviagte to user management, users](https://cdn.auth0.com/website/a0fun/v2/connections-18.gif)  \n      \n1. #### Before finishing this exercise navigate to _Applications > Applications > Lab: Web App > Connections_ and re-_enable_ _Username-Password-Authentication_.\n\n    ![re-enable the default database connection](https://cdn.auth0.com/website/a0fun/v2/connections-13.gif)  \n\nWith the new database in place and enabled, we're ready to add some users."
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Add new users to the database using bulk migration",
      "description": "## Add new users to the database using bulk migration\n\nAuth0 supports importing users from external applications using Custom Database connections, the Auth0 Management API, or the User Import/Export Extension.\n\nIn this exercise, you will perform a bulk user import using the Import/Export Extension. Bulk imports are useful for migrating users from an existing database or service to Auth0. This extension is intended for simple use cases. For large bulk import jobs, writing a custom script that uses the management API is recommended.  \n\n1. #### To install this extension, go to _Extensions_ and click on _User Import/Export_ in the list of provided extensions, then click _Install_. \n    You can filter for it in the provided search field.  \n    The Install Extension dialog is displayed.   \n    ![enable the user import export extension](https://cdn.auth0.com/website/a0fun/v2/connections-20.gif)   \n    \n1. #### Click _User Import / Export_ in the list of installed extensions.  \n    If this is the first time you have run the extension, the App authorization screen is displayed:  \n    \n        Hi User Name,\n        User Import / Export Extension is requesting access to your auth0 account.\n            - Profile: access to your email\n            - Users: create and read your users\n            - Connections: read your connections\n            - Passwords_checking_job: create your passwords_checking_job  \n    \n1. #### Click _accept_.  \n    ![open and authorize the extension](https://cdn.auth0.com/website/a0fun/v2/connections-21.gif)  \n    By default, any time you open the extension, you'll see the User Import screen (If you're on the export screen, you can return to this screen by clicking Import in the left-hand navigation bar).  \n    \n1. #### Download the sample import file here: [M03-L01-bulk-import-users.json](https://github.com/auth0/auth0-product-education-labs/blob/main/data/bulk-import-users.json?raw=true) and save it to your desktop. \n    This users file is [an array of user information in JSON format](https://auth0.com/docs/users/bulk-user-import-database-schema-and-examples).  \n    ![save the users file](https://cdn.auth0.com/website/a0fun/v2/connections-21-1.gif)  \n      \n1. #### Now, select the _Drop your file here, or click to select_ the field and locate the M03-L01-bulk-import-users.json file on your computer. Then select the _Contoso-Users_ database connection for which your users will be imported, and click _Start importing users_.\n    When the upload is complete you will see the file listed on the page.     \n    Under _Import Status_ you may see a message _Pending_ while the process is scheduled.    \n    ![import the users file](https://cdn.auth0.com/website/a0fun/v2/connections-22.gif)   \n      \n1. #### Eventually, you will see a _Completed_ status indicating the users have been imported. When this happens, click the _Report_ icon to see additional information.  \n    \n1. #### Now return to the dashboard and navigate to _User Management > Users_.  \n    Note that the users have been imported into the _Contoso-Users_ database connection, which you can see to the right of their name and email details.  \n    ![return and view the users in the database](https://cdn.auth0.com/website/a0fun/v2/connections-23.gif)  "
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Recap",
      "description": "## Recap\n\nIn this lab you:\n\n*   Enabled Twitter as a social connection for your Web App.\n*   Created a new Auth0 Database\n*   Added the User Import / Export Extension to your tenant\n*   Imported new users to the new database using bulk migration/user import."
    }
  ]
}