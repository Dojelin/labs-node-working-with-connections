{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "1: Working with Connections",
  "steps": [
    {
      "file": "README.md",
      "line": 1,
      "title": "What you'll do",
      "description": "## Here's what you'll do:  \n\n*   Enable Twitter as a social connection for your Web App\n*   Create a new Auth0 Database\n*   Add new users to the database using bulk migration\n\nA connection is a relationship between Auth0 and a source of users, which may include identity providers (such as Google or LinkedIn), databases, or passwordless authentication methods. Auth0 sits between your application and its sources of users, which adds a level of abstraction so your application is isolated from any changes to and idiosyncrasies of each source's implementation."
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Enable Twitter as a social connection for your web app",
      "description": "## Enable Twitter as a social connection for your web app\n\nIn this lab, you will walk through how to enable a Social connection as if you had an actual social media developer account.  \n  \nIf you were working in a production environment, before connecting your Auth0 app to a third-party service (in this example, Twitter,) [you would need to have a Developer account](https://auth0.com/docs/connections/social/twitter) with the third party.  \n  \nHowever, for the lab, you will only enable the Twitter social connection and test the login screen to see the result. You will **not** configure the Twitter Client ID and Client Secret as part of this lab, [as you would for a production environment](https://auth0.com/docs/get-started/dashboard/set-up-social-connections).  \n  \n1. #### Open your Auth0 Dashboard and make sure you're working in your **labs-** tenant.  \n    \n1. #### Remind yourself what the current login experience looks like by clicking the profile image in the upper right hand corner and selecting **Getting Started** > \"Try your login box\" > **Try it out**. \n    - **Important** If you don't see this option, first scroll to the bottom of the page and look in the lower right-hand side for \"**I'm done with this setup. Hide this.**\" and click the **Hide this** link.\n    - The login page is displayed with the default fields for user credentials.  \n    - If you do not see the login page, you probably have an authentication cookie set from previous exercises. You can force a logout by visiting [**https://YOUR-TENANT.REGION.auth0.com/v2/logout**](https://your-tenant.region.auth0.com/v2/logout).  \n    - **Tip:** Bookmark your tenant’s logout URL so you can use it throughout the lab exercises.  \n\n    ![connections-1](./.auth0/lab/guides/images/connections-1.gif)    \n\n1. #### Return to the dashboard and click **Authentication** in the left-hand navigation. The navigation expands to show the four types of connections:\n    \n    1. Database\n    1.  Social\n    1.  Enterprise\n    1.  Passwordless      \n      \n1. #### Click **Social**, click **Create social connection**, then type Twitter in teh search field, and select it.\n    The _New Twitter Social Connection_ page is displayed. This details the items Twitter will need access to in your labs tenant.  \n\n    ![connections-2](./.auth0/lab/guides/images/connections-2.gif)  \n    \n1. #### Click **Continue.**  \n    \n    - On the Twitter Social Connection page, you will see the fields for:  \n        1.  Consumer API key\n        1.  Consumer API secret key    \n    - These fields state “Leave blank to use Auth0 dev keys” - this will allow you to test out the social connection without obtaining your own Key and Secret. If you were working on a production application, you would need to do obtain your own keys.  \n        \n1. #### Keep the default settings, and click **Create**. \n    The Twitter connection **Applications** tab is displayed.  \n      \n    - Now, we'll choose which applications will use the Twitter social connection: for this exercise, we'll select the **Lab: Web App**.  \n\n1. #### Click the toggle switch to the right of the application in the list.  \n    ![connections-3](./.auth0/lab/guides/images/connections-3.gif)  \n    \n1. #### Next, click the breadcrumb link to go back to the **Social** connections list.\n    - Note the warning icon next to Twitter In the list of social connections. Hover over the warning icon, and you’ll see a popover message “Active with Auth0 Dev Keys\".\n1. #### Click the Twitter entity, and the settings page is displayed, with a **warning** message:\n    - This connection is using Auth0 development keys. Auth0 development keys are intended for testing and are not recommended for Production environments. This connection should be configured with your own keys to enable SSO, federated logout, and other features.  \n    [**_Auth0 development keys are not recommended for Production environments_**](https://auth0.com/docs/connections/social/devkeys)**_._**  \n    ![connections-4](./.auth0/lab/guides/images/connections-4.gif)  \n1. #### Let's launch the Sample Application (Lab: Web App) and see the Twitter log in option enabled on the login box.\n    1. #### Click [here](command:workbench.action.debug.start) to launch the application locally.\n         - Wait a moment for the application to launch. You can see the progress in the debug console.\n    1. #### Click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open it in your browser.\n    1. #### In the sample app, click the login link in the top right.\n        The application redirects to Auth0 for login.\n    1. #### Scroll down - you should see the **Continue with Twitter** button. \n    Congratulations! The **Sign in with Twitter** option should now show up on the application's login box:  \n\n        ![connections-5](./.auth0/lab/guides/images/connections-5.gif)  "
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Test the default Auth0 database connection",
      "description": "## Test the default Auth0 database connection\n\nAuth0 provides database connections to authenticate users with an email/username and password. These credentials are securely stored in the Auth0 user store or in your own database. A default database connection is set up for you when your tenant was created.\n\nIn this exercise, you will explore the settings for the default database connection, and see what happens if an application has no connection enabled for it.\n\n1. #### In your labs tenant, click **Authentication > Database**. \n    The available database connections are displayed. Currently, the default created for you is called _Username-Password-Authentication_. This database stores accounts that are created by users or migrated in. Social connections will NOT appear here.\n\n    ![connections-6](./.auth0/lab/guides/images/connections-6.gif)    \n      \n1. #### Explore the current database connection settings by clicking the title link.     \n    The database connection **settings** tab is displayed.  \n    ![connections-7](./.auth0/lab/guides/images/connections-7.gif)   \n     On the Settings tab, you can enable usernames, disable signups, and enable import of users to Auth0 if you define a Custom Database for the connection.  \n      \n1. #### Click the **Password Policy** tab. \n    ![connections-8](./.auth0/lab/guides/images/connections-8.gif)   \n    Here you can customize your specific password policy, including password strength, history, a dictionary of forbidden passwords, and forbidding the use of personal data in passwords.  \n      \n1. #### Click the **Custom Database** tab. \n    ![connections-9](./.auth0/lab/guides/images/connections-9.gif)  \n    If you have an enterprise account you can enable a Custom Database connection to link to your own MySql, Mongo, SQL Server, etc. database. Here you would also set up your Database Actions scripts for user lifecycle operations:\n    \n    - Login\n    - Create\n    - Verify\n    - Change password\n    - Get user\n    - Delete  \n          \n    However, as you are signed up for a free Auth0 account, this feature will be disabled unless you upgrade to an Enterprise plan.   \n1. #### Click the **Applications** tab, then toggle switch next to the **Lab: Web App** to off.  \n    ![connections-10](./.auth0/lab/guides/images/connections-10.gif)  \n    You've now disabled this database connection for the Web Application.  \n1. #### The app should still be running from the last time we launched it. Click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open it in your browser.\n    - If it isn't still running, click [here](command:workbench.action.debug.start) to start it up again.\n1. #### Click the log in link in the top right corner.\n    ![connections-11](./.auth0/lab/guides/images/connections-11.gif)  \n    Note that your login screen now only has sign-in with social connections, as you have disabled the database connection for this application. As this change was made in the tenant, and didn't require changes to application code, there was no need to rebuild the application.  \n1. #### Back in your tenant, locate the **Lab: Web App** on the Username-Password-Authentication connection and re-enable it by clicking the toggle.   \n    ![connections-12](./.auth0/lab/guides/images/connections-12.gif)   \n1. #### Click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open your web app up again and click the login link. (You can also just refresh the page if you already have it open.)\n    Username and password authentication is restored!  "
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Create a new Auth0 database",
      "description": "## Create a new Auth0 database\n\nWe're going to import some user accounts into Auth0 - but before we do, let's create a new database for them. \n\n1. #### Navigate to **Authentication > Database**, then click **Create DB Connection**.\n    ![connections-13](./.auth0/lab/guides/images/connections-13.gif)   \n    The New Database Connection screen is displayed.  \n      \n1. #### Enter **Contoso-Users** as the name for this database connection, then click **Create**\n    ![connections-14](./.auth0/lab/guides/images/connections-14.gif)   \n    The Settings tab for the new database connection is displayed.   \n    \n1. #### Move to the **Applications tab** and enable this new connection for the  **Lab: Web App** application.\n    ![connections-15](./.auth0/lab/guides/images/connections-15.gif)    \n      \n1. #### Now, go to **Applications > Lab: Web App > Connections**. \n    Note this application is using two database connections:\n    - _Username-Password-Authentication_ \n    - _Contoso-Users_\n    \n1. #### **Disable** the _Username-Password-Authentication_ connection.   \n    ![connections-16](./.auth0/lab/guides/images/connections-16.gif)   \n      \n1. #### Now, let's go sign up for an account in the web app:\n    1. #### The app should still be running from the last time we launched it. Click [here](command:auth0.lab.openEndpointByName?[\"Lab: Web App\"]) to open it in your browser.\n        -  If it isn't still running, click [here](command:workbench.action.debug.start) to start it up again.\n    1. #### Now, click the **login** link. \n        The login screen is displayed because you have at least one connection enabled (The new Contoso database). But, there is no indication to the user that anything has changed.  \n    1. #### Click the **Sign-up** link and enter an email address that you have access to, along with a unique password for this new account. Then sign up!\n        - Use good password hygiene: Don’t use an existing password!\n        - ** DO NOT ** use social login. Instead, log in using a username and password.   \n\n    ![connections-17](./.auth0/lab/guides/images/connections-17.gif)   \n    \n1. #### Now, back in your Auth0 Dashboard, navigate to **User Management > Users**.  \n    Note that you have a user with your email address and it is stored in the _Contoso-Users_ database connection you created. Nice work!  \n\n    ![connections-18](./.auth0/lab/guides/images/connections-18.gif)  \n      \n1. #### Before finishing this exercise navigate to **Applications > Applications > Lab: Web App > Connections** and re-**enable** _Username-Password-Authentication_.\n\n    ![connections-19](./.auth0/lab/guides/images/connections-19.gif)  \n\nWith the new database in place and enabled, we're ready to add some users.\n"
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Add new users to the database using bulk migration",
      "description": ""
    },
    {
      "file": "README.md",
      "line": 1,
      "title": "Recap",
      "description": "staged"
    }
  ]
}